{"version":3,"sources":["../../src/commons/utils.ts"],"names":["checkDateMatch","documentRequest","match","RegexEnum","FORMAT_DATE","FORMAT_DATE_WITH_VERTICAL_SLASH","FORMAT_DATE_WITH_DIAGONAL_SLASH","dateCheck","dateNumber","typeDate","numberParser","DateLimit","DATE_LIMIT_MIN","Math","abs","DATE_DAY_MAX","i","String","DATE_MONTH_MAX","dateSplitter","dateData","split","RegexSplitter","FORMAT_SPLITTER_DATE","FORMAT_SPLITTER_VERTICAL_SLASH","FORMAT_SPLITTER_DIAGONAL_SLASH"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEO,SAASA,cAAT,CAAwBC,eAAxB,EAAyD;AAC5D,MAAIA,eAAe,CAACC,KAAhB,CAAsBC,iBAAUC,WAAhC,CAAJ,EAAkD;AAC9C,WAAO,UAAP;AACH;;AACD,MAAIH,eAAe,CAACC,KAAhB,CAAsBC,iBAAUE,+BAAhC,CAAJ,EAAsE;AAClE,WAAO,YAAP;AACH;;AACD,MAAIJ,eAAe,CAACC,KAAhB,CAAsBC,iBAAUG,+BAAhC,CAAJ,EAAsE;AAClE,WAAO,YAAP;AACH;;AACD,SAAO,OAAP;AAGH;;AAEM,SAASC,SAAT,CAAmBC,UAAnB,EAAuCC,QAAvC,EAAgE;AACnE,MAAIC,YAAY,GAAGF,UAAnB;;AAEA,MAAIA,UAAU,GAAGG,qBAAUC,cAA3B,EAA2C;AACvCJ,IAAAA,UAAU,GAAGK,IAAI,CAACC,GAAL,CAASJ,YAAT,CAAb;AACAA,IAAAA,YAAY,GAAGG,IAAI,CAACC,GAAL,CAASJ,YAAT,CAAf;AACH;;AACD,MAAID,QAAQ,IAAI,KAAZ,IAAqBD,UAAU,GAAGG,qBAAUI,YAAhD,EAA8D;AAC1D,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIR,UAAU,GAAGG,qBAAUI,YAA5C,EAA2DC,CAAC,EAA5D,EAAgE;AAC5DN,MAAAA,YAAY;AACf;;AACD,WAAOO,MAAM,CAACP,YAAD,CAAb;AACH;;AAED,MAAID,QAAQ,IAAI,OAAZ,IAAuBD,UAAU,GAAGG,qBAAUO,cAAlD,EAAkE;AAC9D,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIR,UAAU,GAAGG,qBAAUO,cAA5C,EAA6DF,CAAC,EAA9D,EAAkE;AAC9DN,MAAAA,YAAY,GAAGA,YAAY,GAAG,CAA9B;AACH;;AACD,WAAOO,MAAM,CAACP,YAAD,CAAb;AACH;;AAED,MAAIF,UAAU,IAAIG,qBAAUC,cAA5B,EAA4C;AACxCF,IAAAA,YAAY,GAAGA,YAAY,GAAG,CAA9B;AACA,WAAOO,MAAM,CAACP,YAAD,CAAb;AACH;;AACD,SAAOO,MAAM,CAACP,YAAD,CAAb;AAEH;;AACM,SAASS,YAAT,CAAsBC,QAAtB,EAA+C;AAElD,MAAIA,QAAQ,CAAClB,KAAT,CAAeC,iBAAUC,WAAzB,CAAJ,EAA2C;AACvC,WAAOgB,QAAQ,CAACC,KAAT,CAAeC,qBAAcC,oBAA7B,CAAP;AACH;;AACD,MAAIH,QAAQ,CAAClB,KAAT,CAAeC,iBAAUE,+BAAzB,CAAJ,EAA+D;AAC3D,WAAOe,QAAQ,CAACC,KAAT,CAAeC,qBAAcE,8BAA7B,CAAP;AACH;;AACD,MAAIJ,QAAQ,CAAClB,KAAT,CAAeC,iBAAUG,+BAAzB,CAAJ,EAA+D;AAC3D,WAAOc,QAAQ,CAACC,KAAT,CAAeC,qBAAcG,8BAA7B,CAAP;AACH;;AAED,SAAOL,QAAQ,CAACC,KAAT,CAAeC,qBAAcC,oBAA7B,CAAP;AAEH","sourcesContent":["import { DateLimit } from \"./constants\"\nimport { RegexEnum, RegexSplitter } from \"./regex.enum\"\n\nexport function checkDateMatch(documentRequest: string): string {\n    if (documentRequest.match(RegexEnum.FORMAT_DATE)) {\n        return 'ddMMyyyy'\n    }\n    if (documentRequest.match(RegexEnum.FORMAT_DATE_WITH_VERTICAL_SLASH)) {\n        return 'dd-MM-yyyy'\n    }\n    if (documentRequest.match(RegexEnum.FORMAT_DATE_WITH_DIAGONAL_SLASH)) {\n        return 'dd/MM/yyyy'\n    }\n    return 'error'\n\n\n}\n\nexport function dateCheck(dateNumber: number, typeDate: string):string {\n    let numberParser = dateNumber;\n\n    if (dateNumber < DateLimit.DATE_LIMIT_MIN) {\n        dateNumber = Math.abs(numberParser);\n        numberParser = Math.abs(numberParser);\n    }\n    if (typeDate == 'day' && dateNumber > DateLimit.DATE_DAY_MAX) {\n        for (let i = 0; i < (dateNumber - DateLimit.DATE_DAY_MAX); i++) {\n            numberParser--;\n        }\n        return String(numberParser);\n    }\n\n    if (typeDate == 'month' && dateNumber > DateLimit.DATE_MONTH_MAX) {\n        for (let i = 0; i < (dateNumber - DateLimit.DATE_MONTH_MAX); i++) {\n            numberParser = numberParser - 1;\n        }\n        return String(numberParser);\n    }\n\n    if (dateNumber == DateLimit.DATE_LIMIT_MIN) {\n        numberParser = numberParser + 1;\n        return String(numberParser);\n    }\n    return String(numberParser);\n\n}\nexport function dateSplitter(dateData:string):String[]{\n\n    if (dateData.match(RegexEnum.FORMAT_DATE)) {\n        return dateData.split(RegexSplitter.FORMAT_SPLITTER_DATE)\n    }\n    if (dateData.match(RegexEnum.FORMAT_DATE_WITH_VERTICAL_SLASH)) {\n        return dateData.split(RegexSplitter.FORMAT_SPLITTER_VERTICAL_SLASH)\n    }\n    if (dateData.match(RegexEnum.FORMAT_DATE_WITH_DIAGONAL_SLASH)) {\n        return dateData.split(RegexSplitter.FORMAT_SPLITTER_DIAGONAL_SLASH)\n    }\n\n    return dateData.split(RegexSplitter.FORMAT_SPLITTER_DATE)\n\n}"],"file":"utils.js"}